
import java.awt.Color;
import java.awt.Component;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.LineNumberReader;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author wesley
 */
public class SetupWindow extends javax.swing.JFrame {
    private ArrayList<String> foundVulns;
    private ArrayList<Vulnerability> selectedVulns;
    
    public ImportFile file;
    public boolean currentOS;
    /**
     * Creates new form SetupWindow
     */
    public SetupWindow() {
        initComponents();
        currentOS = System.getProperty("os.name").equals("Linux");
        file = new ImportFile();
        file.importVul("Vulnerabilities1.csv");
        for (Vulnerability v : file.vulMap.getScans().values()) {
            if (v.getOS() == currentOS)
                ((DefaultTableModel)foundDatabase_jTable.getModel()).addRow(new Object[]{v.getName()});
        }
        selectedVulns = new ArrayList();
        searchForVulns();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        toBeAdded_jTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        addVuln_jButton = new javax.swing.JButton();
        removeVuln_jButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        foundDatabase_jTable = new javax.swing.JTable();
        launchSB_jButton = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Vulnerability", "Command", "Point Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setHeaderValue("Com");
            jTable1.getColumnModel().getColumn(2).setHeaderValue("Point Value");
        }

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                formComponentAdded(evt);
            }
        });

        jLabel2.setText("Available");

        toBeAdded_jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        toBeAdded_jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                toBeAdded_jTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(toBeAdded_jTable);

        jLabel3.setText("Acting On");

        addVuln_jButton.setText("Add >");
        addVuln_jButton.setEnabled(false);
        addVuln_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVuln_jButtonActionPerformed(evt);
            }
        });

        removeVuln_jButton.setText("< Remove");
        removeVuln_jButton.setEnabled(false);
        removeVuln_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeVuln_jButtonActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(51, 204, 0));
        jLabel1.setText("■ On System");

        jLabel4.setForeground(new java.awt.Color(0, 0, 153));
        jLabel4.setText("■ In Database");

        foundDatabase_jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        foundDatabase_jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foundDatabase_jTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(foundDatabase_jTable);

        launchSB_jButton.setText("Launch Scoring Bot");
        launchSB_jButton.setEnabled(false);
        launchSB_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                launchSB_jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(removeVuln_jButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addVuln_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(launchSB_jButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addVuln_jButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeVuln_jButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(launchSB_jButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addVuln_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVuln_jButtonActionPerformed
        for (Vulnerability v : file.vulMap.getScans().values()) {
            if (v.getName().equals(foundDatabase_jTable.getValueAt(foundDatabase_jTable.getSelectedRow(), foundDatabase_jTable.getSelectedColumn()))) {
                selectedVulns.add(v);
                ((DefaultTableModel)foundDatabase_jTable.getModel()).removeRow(foundDatabase_jTable.getSelectedRow());
                ((DefaultTableModel)toBeAdded_jTable.getModel()).addRow(new Object[]{v.getName()});
                break;
            }
        }
        addVuln_jButton.setEnabled(foundDatabase_jTable.getSelectedRow() != -1);
        removeVuln_jButton.setEnabled(toBeAdded_jTable.getSelectedRow() != -1);
        launchSB_jButton.setEnabled(toBeAdded_jTable.getRowCount() > 0);
    }//GEN-LAST:event_addVuln_jButtonActionPerformed

    private void launchSB_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_launchSB_jButtonActionPerformed
        ScoringBotWindow sw = new ScoringBotWindow(selectedVulns.size(), countPoints());
        System.out.println(selectedVulns.size() + "\t" + countPoints());
        sw.setVisible(true);
        sw.startScoringBot(selectedVulns, currentOS, sw);
    }//GEN-LAST:event_launchSB_jButtonActionPerformed

    private void foundDatabase_jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foundDatabase_jTableMouseClicked
        addVuln_jButton.setEnabled(foundDatabase_jTable.getSelectedRow() != -1);
        removeVuln_jButton.setEnabled(toBeAdded_jTable.getSelectedRow() != -1);
    }//GEN-LAST:event_foundDatabase_jTableMouseClicked

    private void toBeAdded_jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toBeAdded_jTableMouseClicked
        addVuln_jButton.setEnabled(foundDatabase_jTable.getSelectedRow() != -1);
        removeVuln_jButton.setEnabled(toBeAdded_jTable.getSelectedRow() != -1);
    }//GEN-LAST:event_toBeAdded_jTableMouseClicked

    private void removeVuln_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeVuln_jButtonActionPerformed
        for (Vulnerability v : selectedVulns) {
            if (v.getName().equals(toBeAdded_jTable.getValueAt(toBeAdded_jTable.getSelectedRow(), toBeAdded_jTable.getSelectedColumn()))) {
                selectedVulns.remove(v);
                ((DefaultTableModel)toBeAdded_jTable.getModel()).removeRow(toBeAdded_jTable.getSelectedRow());
                ((DefaultTableModel)foundDatabase_jTable.getModel()).addRow(new Object[]{v.getName()});
                break;
            }
        }
        addVuln_jButton.setEnabled(foundDatabase_jTable.getSelectedRow() != -1);
        removeVuln_jButton.setEnabled(toBeAdded_jTable.getSelectedRow() != -1);
        launchSB_jButton.setEnabled(toBeAdded_jTable.getRowCount() > 0);
    }//GEN-LAST:event_removeVuln_jButtonActionPerformed

    private void formComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_formComponentAdded
        searchForVulns();
        foundDatabase_jTable.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                setBackground(jLabel4.getForeground());
                for (String s : foundVulns) {
                    if (s.equals(value)) {
                        setBackground(jLabel1.getForeground());
                    }
                }
                return c;
            }
        });
    }//GEN-LAST:event_formComponentAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SetupWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SetupWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SetupWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SetupWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SetupWindow().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addVuln_jButton;
    private javax.swing.JTable foundDatabase_jTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton launchSB_jButton;
    private javax.swing.JButton removeVuln_jButton;
    private javax.swing.JTable toBeAdded_jTable;
    // End of variables declaration//GEN-END:variables

    private void searchForVulns() {
        foundVulns = new ArrayList();
        ComputerConnection c = new ComputerConnection(currentOS);
        for (Vulnerability vuln : file.vulMap.getScans().values()) {
            try {
                if (c.sendMessage(vuln.toFindVuln()).equals(vuln.toCompare())) {
                    foundVulns.add(vuln.getName());
                }
            }
            catch (Exception ex) {
                
            }
        }
    }

    private int countPoints() {
        int totalPoints = 0;
        for (Vulnerability v : selectedVulns) {
            totalPoints += v.pointsWorth();
        }
        return totalPoints;
    }
}
